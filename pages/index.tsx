import React, { useState } from 'react';
import Head from 'next/head';
import CardDetail from '../components/Cards/Detail';
import Footer from '../components/Footers/Default';
import Navbar from '../components/Navbars/Default';
import PokemonList from '../components/Containers/PokemonList';
import { getPokemon } from '../services/api/pokedex';
import { pokemonPartial, detailPokemon, listPokemon } from '../interfaces/';
import { GetStaticProps } from 'next';
import PropTypes from 'prop-types';
const publicApi = process.env.NEXT_PUBLIC_PUBLIC_API;

export default function Home({
    listPokemons,
    defaultPokemon,
}: {
    listPokemons: pokemonPartial[];
    defaultPokemon: detailPokemon;
}): JSX.Element {
    const [selectedPokemon, setSelectedPokemon] = useState<detailPokemon>(null);

    const changeSelectedPokemon = async (id: string) => {
        try {
            const res = await getPokemon(id);
            if (res.data) {
                res.data.image = `https://pokeres.bastionbot.org/images/pokemon/${res.data.id}.png`;
                window.scrollTo(0, 0);
                setSelectedPokemon(res.data);
            }
        } catch (error) {}
    };

    return (
        <div style={{ backgroundColor: '#f8f8f8' }}>
            <Navbar changeSelectedPokemon={changeSelectedPokemon}></Navbar>
            <div>
                <img src="/img/logotext.png" width="200px" className="mx-auto mt-20" alt="" />
                <CardDetail defaultPokemon={defaultPokemon} selectedPokemon={selectedPokemon}></CardDetail>
                <div className="container mx-auto">
                    <Head>
                        <title>Create Next App</title>
                        <meta name="description" content="Generated by create next app" />
                        <link rel="icon" href="/favicon.ico" />
                    </Head>
                </div>
                <PokemonList data={listPokemons} changeSelectedPokemon={changeSelectedPokemon}></PokemonList>
            </div>
            <Footer></Footer>
        </div>
    );
}

Home.propTypes = {
    listPokemons: PropTypes.array.isRequired,
    defaultPokemon: PropTypes.object.isRequired,
};

export const getStaticProps: GetStaticProps = async () => {
    const listPokemons: listPokemon = await fetch(`${publicApi}pokemon`).then((response) => response.json());
    const defaultPokemon: detailPokemon = await fetch(`${publicApi}pokemon/25`).then((response) => response.json());
    if (listPokemons?.results) {
        listPokemons.results.forEach((el, index) => {
            el.image = `https://pokeres.bastionbot.org/images/pokemon/${index + 1}.png`;
        });
    }
    if (defaultPokemon) {
        defaultPokemon.image = `https://pokeres.bastionbot.org/images/pokemon/25.png`;
    }
    return {
        props: { listPokemons: listPokemons.results, defaultPokemon },
    };
};
